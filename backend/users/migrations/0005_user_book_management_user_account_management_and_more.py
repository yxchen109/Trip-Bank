# Generated by Django 4.1.13 on 2023-12-13 08:08

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('accounts', '0004_alter_accounts_options_and_more'),
        ('books', '0005_rename_expense_books_group_expense_and_more'),
        ('users', '0004_users_username_alter_users_email'),
    ]

    operations = [
        migrations.CreateModel(
            name='User_Book_Management',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('budget', models.FloatField(default=0.0)),
                ('expense', models.FloatField(default=0.0)),
                ('book', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='books.books')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'user_book_management',
            },
        ),
        migrations.CreateModel(
            name='User_Account_Management',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.FloatField(default=0.0)),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.accounts')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'user_account_management',
            },
        ),
        migrations.AddField(
            model_name='users',
            name='account',
            field=models.ManyToManyField(through='users.User_Account_Management', to='accounts.accounts'),
        ),
        migrations.AddField(
            model_name='users',
            name='book',
            field=models.ManyToManyField(through='users.User_Book_Management', to='books.books'),
        ),
    ]
